services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: scheduler_db
      POSTGRES_USER: scheduler_user
      POSTGRES_PASSWORD: scheduler_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scheduler_user -d scheduler_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://scheduler_user:scheduler_password@db:5432/scheduler_db
      REDIS_URL: redis://cache:6379
      JWT_SECRET_KEY: your-secret-key-change-in-production
      CORS_ORIGINS: http://localhost:3001
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://api:8000
    ports:
      - "3001:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  proxy:
    image: caddy:2-alpine
    ports:
      - "8081:80"
      - "8444:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - web
      - api

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
